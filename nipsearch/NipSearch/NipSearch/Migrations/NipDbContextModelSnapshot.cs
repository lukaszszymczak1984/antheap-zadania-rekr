// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NipSearch.Db;

#nullable disable

namespace NipSearch.Migrations
{
    [DbContext(typeof(NipDbContext))]
    partial class NipDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NipSearch.Entities.Account", b =>
                {
                    b.Property<int>("IdAccountNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAccountNumber"), 1L, 1);

                    b.Property<int>("IdSubject")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAccountNumber");

                    b.HasIndex("IdSubject");

                    b.ToTable("AccountNumbers");
                });

            modelBuilder.Entity("NipSearch.Entities.Person", b =>
                {
                    b.Property<int>("IdPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerson"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdSubjectAuthorizedClerk")
                        .HasColumnType("int");

                    b.Property<int?>("IdSubjectPartner")
                        .HasColumnType("int");

                    b.Property<int?>("IdSubjectRepresentative")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pesel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPerson");

                    b.HasIndex("IdSubjectAuthorizedClerk");

                    b.HasIndex("IdSubjectPartner");

                    b.HasIndex("IdSubjectRepresentative");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("NipSearch.Entities.Subject", b =>
                {
                    b.Property<int>("IdSubject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubject"), 1L, 1);

                    b.Property<bool>("HasVirtualAccounts")
                        .HasColumnType("bit");

                    b.Property<string>("Krs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pesel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationDenialBasis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationDenialDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationLegalDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Regon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemovalBasis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemovalDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidenceAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestorationBasis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestorationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusVat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSubject");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("NipSearch.Entities.Account", b =>
                {
                    b.HasOne("NipSearch.Entities.Subject", "Subject")
                        .WithMany("Accounts")
                        .HasForeignKey("IdSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("NipSearch.Entities.Person", b =>
                {
                    b.HasOne("NipSearch.Entities.Subject", "SubjectAuthorizedClerk")
                        .WithMany("AuthorizedClerks")
                        .HasForeignKey("IdSubjectAuthorizedClerk");

                    b.HasOne("NipSearch.Entities.Subject", "SubjectPartner")
                        .WithMany("Partners")
                        .HasForeignKey("IdSubjectPartner");

                    b.HasOne("NipSearch.Entities.Subject", "SubjectRepresentative")
                        .WithMany("Representatives")
                        .HasForeignKey("IdSubjectRepresentative");

                    b.Navigation("SubjectAuthorizedClerk");

                    b.Navigation("SubjectPartner");

                    b.Navigation("SubjectRepresentative");
                });

            modelBuilder.Entity("NipSearch.Entities.Subject", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("AuthorizedClerks");

                    b.Navigation("Partners");

                    b.Navigation("Representatives");
                });
#pragma warning restore 612, 618
        }
    }
}
